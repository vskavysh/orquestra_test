ZapOSApiVersion: v1alpha1
kind: Workflow

resources:
  # List resources needed by workflow.
resources:

# A resource named `welcome` that is a public git repo. All the fields here are required except branch, which defaults to master.
- name: welcome
  type: git
  parameters:
    url: "git@github.com:vskavysh/welcome_workflow.git"
    branch: "master"

- name: ztransform
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/tutorial-0-ztransform.git"
    branch: "master"
  '''
- name: z-quantum-core
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-core.git"
    branch: "master"
- name: z-quantum-qcbm
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-qcbm.git"
    branch: "dev"
- name: z-quantum-optimizers
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-optimizers.git"
    branch: "master"
- name: qe-forest
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-forest.git"
    branch: "master"
- name: qe-qhipster
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-qhipster.git"
    branch: "master"
- name: qe-openfermion
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-openfermion.git"
    branch: "master"

:'''

# Specify the prefix to use when generating names of workflow executions.
metadata:
  generateName: qcbm-opt-

# The actual workflow specification
spec:

  entrypoint: main
  arguments:
    parameters:
    - s3-bucket: quantum-engine
    - s3-key: projects/z-quantum-qcbm/qcbm-opt

  templates:

  - name: main
    steps:

    # Get Initial Parameters
    - - name: get-initial-parameters
        template: generate-random-qcbm-params
        arguments:
          parameters:
          - n-qubits: "4"
          - n-layers: "4"
          - seed: "1234"
          - topology: "all"
          - min-val: "-1.57"
          - max-val: "1.57"
          - resources: [z-quantum-core, z-quantum-qcbm]

    # Generate Target Distribution
      - name: get-bars-and-stripes-distribution
        template: generate-bars-and-stripes-target-distribution
        arguments:
          parameters:
          - nrows: "2"
          - ncols: "2"
          - fraction: "1.0"
          - method: "zigzag"
          - resources: [z-quantum-core, z-quantum-qcbm]

    # Optimize Variational Circuit
    - - name: optimize-circuit
        template: optimize-variational-qcbm-circuit
        arguments:
          parameters:
          - n-qubits: "4"
          - n-layers: "4"
          - topology: "all"
          - epsilon: "0.000001"
          - distance-measure-specs: "{'module_name': 'zquantum.core.bitstring_distribution', 'function_name': 'compute_clipped_negative_log_likelihood'}"

          - backend-specs: "{'module_name': 'qeforest.simulator', 'function_name': 'ForestSimulator', 'device_name': 'wavefunction-simulator'}"
          # - backend-specs: "{'module_name': 'qeqhipster.simulator', 'function_name': 'QHipsterSimulator'}"

          - optimizer-specs: "{'module_name': 'zquantum.optimizers.cma_es_optimizer', 'function_name': 'CMAESOptimizer', 'options': {'popsize': 5, 'sigma_0': 0.1, 'tolx': 1e-6}}"
          # - optimizer-specs: "{'module_name': 'zquantum.optimizers.scipy_optimizer', 'function_name': 'ScipyOptimizer', 'method': 'L-BFGS-B'}"

          - resources: [z-quantum-core, qe-openfermion, z-quantum-optimizers, qe-forest, z-quantum-qcbm]
          - memory: 2048Mi
          artifacts:
          - initial-parameters:
              from: "{{steps.get-initial-parameters.outputs.artifacts.parameters}}"
          - target-distribution:
              from: "{{steps.get-bars-and-stripes-distribution.outputs.artifacts.distribution}}"